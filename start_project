#!/bin/bash

function display_usage() {
    echo "USAGE: $(basename $0) [OPTION] PROJECT_NAME"
    echo
    echo "OPTIONS:"
    echo "  -d  The path to the directory where your project will"
    echo "      be created. Defaults to the value of environment"
    echo "      variable \$DEST_DIR or, if not present, to the"
    echo "      current directory"
    echo
    echo "  -a  The path to your Arduino files (needed for library"
    echo "      support). Defaults to the value of environment"
    echo "      variable \$ARDUINO_DIR or, if not present, to the"
    echo "      current directory"
    echo
}

# We really need a sane option parsing mechanism.
# This is really limited, but the alternatives I
# could find for bash are even worse from what I read.
# I'm really considering writing this in python just
# to use optparse or something.
while getopts ':d:a:h' OPT
do
    case $OPT in
        a)
            ARDUINO_DIR="$(readlink -f "$OPTARG")"
            ;;
        d)
            DEST_DIR="$(readlink -f "$OPTARG")"
            ;;
        d)
            display_usage
            exit 0
            ;;
        \?)
            echo "Invalid option -$OPTARG"
            echo
            display_usage
            exit 1
            ;;
        :)
            echo "Option $OPT requires an argument"
            exit 1
            ;;
    esac
done
# A horrible hack to get the positional arguments.
# Someone please tell me there's a better way to do
# this only I'm too stupid to find out!
ARGS=${@:$OPTIND}

if [ -z "${ARGS[0]}" ]
then
    display_usage
    exit 1
else
    PROJECT_NAME="${ARGS[0]}"
fi

DEST_DIR=${DEST_DIR:=$PWD}
ARDUINO_DIR=${ARDUINO_DIR:=$PWD}

WORKING_DIR="$(dirname $(readlink -f "$0"))"
SKEL="$WORKING_DIR/skel"
MAIN_MAKEFILE="$WORKING_DIR/arduino-mk/Arduino.mk"

PROJECT_DIR="$DEST_DIR/$PROJECT_NAME"

cp -r "$SKEL" "$PROJECT_DIR"
mv "$PROJECT_DIR/project.pde" "$PROJECT_DIR/$PROJECT_NAME.pde"

sed -i "s!__PROJECT_NAME__!$PROJECT_NAME!g" "$PROJECT_DIR/Makefile"
sed -i "s!__ARDUINO_DIR__!$ARDUINO_DIR!g" "$PROJECT_DIR/Makefile"
sed -i "s!__MAIN_MAKEFILE__!$MAIN_MAKEFILE!g" "$PROJECT_DIR/Makefile"

echo "Project $PROJECT_NAME created in $PROJECT_DIR"
echo "Use \`make' to build the project and \`make upload' to send it to your arduino"
